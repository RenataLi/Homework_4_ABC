     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern fscanf
     4                                  
     5                                  extern AUTOMOBILE
     6                                  extern BUS
     7                                  extern TRUCK
     8                                  
     9                                  ;----------------------------------------------
    10                                  ; Ввод параметров поезда из файла
    11                                  global InAutomobile
    12                                  InAutomobile:
    13                                  section .data
    14 00000000 25642564256C6700            .infmt db "%d%d%lg",0
    15                                  section .bss
    16 00000000 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    17 00000008 <res 00000008>              .prect  resq    1   ; адрес поезда
    18                                  section .text
    19 00000000 55                      push rbp
    20 00000001 4889E5                  mov rbp, rsp
    21                                  
    22                                      ; Сохранение принятых аргументов
    23 00000004 48893C25[08000000]          mov     [.prect], rdi          ; сохраняется адрес поезда
    24 0000000C 48893425[00000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    25                                  
    26                                      ; Ввод поезда из файла
    27 00000014 488B3C25[00000000]          mov     rdi, [.FILE]
    28 0000001C 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    28 0000001E [0000000000000000] 
    29 00000026 488B1425[08000000]          mov     rdx, [.prect]       ; &x - int numberOfRailwayCarriage 
    30 0000002E 488B0C25[08000000]          mov     rcx, [.prect]
    31 00000036 4883C104                    add     rcx, 4              ; &y = &x + 4 - int speed
    32 0000003A 4C8B0425[08000000]          mov     r8, [.prect]     
    33 00000042 4983C008                    add     r8, 8               ;&z = &x + 4+4 - double distance
    34 00000046 B801000000                  mov     rax, 1
    35 0000004B E8(00000000)                call    fscanf   
    36 00000050 C9                      leave
    37 00000051 C3                      ret
    38                                  
    39                                  ; // Ввод параметров ship из файла
    40                                  ;void In(ship &s, ifstream &ifst) {
    41                                  ;    int type;
    42                                  ;    ifst >> double s.displacement >> int type >> int s.speed >> double s.distance;
    43                                  ;    s.type = (shipType)type;
    44                                  ;}
    45                                  ;
    46                                  global InBus
    47                                  InBus:
    48                                  section .data
    49 00000008 25642564256C6700            .infmt db "%d%d%lg",0
    50 00000010 496E42757300                .outf db "InBus",0
    51                                  
    52                                  section .bss
    53 00000010 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    54 00000018 <res 00000008>              .bus  resq    1   ; адрес bus
    55                                  section .text
    56 00000052 55                      push rbp
    57 00000053 4889E5                  mov rbp, rsp
    58                                  
    59                                      ; Сохранение принятых аргументов
    60 00000056 48893C25[18000000]          mov     [.bus], rdi          ; сохраняется адрес ship
    61 0000005E 48893425[10000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    62                                  
    63                                       ; Ввод поезда из файла
    64 00000066 488B3C25[10000000]          mov     rdi, [.FILE]
    65 0000006E 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    65 00000070 [0800000000000000] 
    66 00000078 488B1425[18000000]          mov     rdx, [.bus]       ; &x - int numberOfRailwayCarriage 
    67 00000080 488B0C25[18000000]          mov     rcx, [.bus]
    68 00000088 4883C104                    add     rcx, 4              ; &y = &x + 4 - int speed
    69 0000008C 4C8B0425[18000000]          mov     r8, [.bus]     
    70 00000094 4983C008                    add     r8, 8               ;&z = &x + 4+4 - double distance
    71 00000098 B801000000                  mov     rax, 1
    72 0000009D E8(00000000)                call    fscanf   
    73                                      ;mov rdi,.outf
    74                                  ;    call printf
    75 000000A2 C9                      leave
    76 000000A3 C3                      ret
    77                                  
    78                                  global InTruck
    79                                  InTruck:
    80                                  section .data
    81 00000016 25642564256C6700            .infmt db "%d%d%lg",0
    82 0000001E 747275636B00                .outf db "truck",0
    83                                  section .bss
    84 00000020 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    85 00000028 <res 00000008>              .truck  resq    1   ; адрес треугольника
    86                                  section .text
    87 000000A4 55                      push rbp
    88 000000A5 4889E5                  mov rbp, rsp
    89                                  
    90                                      ; Сохранение принятых аргументов
    91 000000A8 48893C25[28000000]          mov     [.truck], rdi          ; сохраняется адрес треугольника
    92 000000B0 48893425[20000000]          mov     [.FILE], rsi          ; сохраняется указатель на файл
    93                                  
    94 000000B8 488B3C25[20000000]           mov     rdi, [.FILE]
    95 000000C0 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    95 000000C2 [1600000000000000] 
    96 000000CA 488B1425[28000000]          mov     rdx, [.truck]       ; &a int s.displacement
    97 000000D2 488B0C25[28000000]          mov     rcx, [.truck]
    98 000000DA 4883C104                    add     rcx, 4              ; &b = &a + 4 int type
    99 000000DE 4C8B0425[28000000]          mov     r8, [.truck]
   100 000000E6 4983C008                    add     r8, 8               ; &c = &x + 4+4 int s.speed
   101 000000EA 4C8B0C25[28000000]          mov     r9, [.truck]
   102 000000F2 4983C10C                    add     r9, 12               ; &d = &x + 4+4+4 double s.distance
   103 000000F6 B801000000                  mov     rax, 1              ; нет чисел с плавающей точкой
   104 000000FB E8(00000000)                call    fscanf
   105                                      ;mov rdi,.outf
   106                                  ;    call printf
   107                                  
   108 00000100 C9                      leave
   109 00000101 C3                      ret
   110                                  ; // Ввод параметров обобщенной фигуры из файла
   111                                  ; int InTransport(void *s, FILE *ifst) {
   112                                  ;     int k;
   113                                  ;     fscanf(ifst, "%d", &k);
   114                                  ;     switch(k) {
   115                                  ;         case 1:
   116                                  ;             *((int*)s) = RECTANGLE;
   117                                  ;             InRectangle(s+intSize, ifst);
   118                                  ;             return 1;
   119                                  ;         case 2:
   120                                  ;             *((int*)s) = TRIANGLE;
   121                                  ;             InShip(s+intSize, ifst);
   122                                  ;             return 1;
   123                                  ;         default:
   124                                  ;             return 0;
   125                                  ;     }
   126                                  ; }
   127                                  global InCar
   128                                  InCar:
   129                                  section .data
   130 00000024 256400                      .tagFormat   db      "%d",0
   131 00000027 5461672069733A2025-         .tagOutFmt   db     "Tag is: %d",10,0
   131 00000030 640A00             
   132                                  section .bss
   133 00000030 <res 00000008>              .FILE       resq    1   ; временное хранение указателя на файл
   134 00000038 <res 00000008>              .car    resq    1   ; адрес фигуры
   135 00000040 <res 00000004>              .carTag   resd    1   ; признак фигуры
   136                                  section .text
   137 00000102 55                      push rbp
   138 00000103 4889E5                  mov rbp, rsp
   139                                  
   140                                      ; Сохранение принятых аргументов
   141 00000106 48893C25[38000000]          mov     [.car], rdi          ; сохраняется адрес фигуры
   142 0000010E 48893425[30000000]          mov     [.FILE], rsi            ; сохраняется указатель на файл
   143                                  
   144                                      ; чтение признака фигуры и его обработка
   145 00000116 488B3C25[30000000]          mov     rdi, [.FILE]
   146 0000011E 48BE-                       mov     rsi, .tagFormat
   146 00000120 [2400000000000000] 
   147 00000128 488B1425[38000000]          mov     rdx, [.car]      ; адрес начала фигуры (ее признак)
   148 00000130 4831C0                      xor     rax, rax            ; нет чисел с плавающей точкой
   149 00000133 E8(00000000)                call    fscanf
   150                                  
   151                                      ;; Тестовый вывод признака фигуры
   152                                  ;     mov     rdi, .tagOutFmt
   153                                  ;     mov     rax, [.ptransport]
   154                                  ;     mov     esi, [rax]
   155                                  ;     call    printf
   156                                  
   157 00000138 488B0C25[38000000]          mov rcx, [.car]          ; загрузка адреса начала фигуры
   158 00000140 8B01                        mov eax, [rcx]              ; и получение прочитанного признака
   159 00000142 3B0425[00000000]            cmp eax, [AUTOMOBILE]
   160 00000149 7416                        je .automobileIn
   161 0000014B 3B0425[00000000]            cmp eax, [BUS]  ;
   162 00000152 742D                        je .busIn
   163 00000154 3B0425[00000000]            cmp eax, [TRUCK] ;
   164 0000015B 7444                        je .truckIn
   165 0000015D 31C0                        xor eax, eax    ; Некорректный признак - обнуление кода возврата
   166 0000015F EB60                        jmp     .return
   167                                  .automobileIn:
   168                                      ; Ввод прямоугольника
   169 00000161 488B3C25[38000000]          mov     rdi, [.car]
   170 00000169 4883C704                    add     rdi, 4
   171 0000016D 488B3425[30000000]          mov     rsi, [.FILE]
   172 00000175 E886FEFFFF                  call    InAutomobile
   173 0000017A B801000000                  mov     rax, 1  ; Код возврата - true
   174 0000017F EB40                        jmp     .return
   175                                  .busIn:
   176                                      ; Ввод треугольника
   177 00000181 488B3C25[38000000]          mov     rdi, [.car]
   178 00000189 4883C704                    add     rdi, 4
   179 0000018D 488B3425[30000000]          mov     rsi, [.FILE]
   180 00000195 E8B8FEFFFF                  call    InBus
   181 0000019A B801000000                  mov     rax, 1  ; Код возврата - true
   182 0000019F EB20                        jmp     .return
   183                                  .truckIn:
   184 000001A1 488B3C25[38000000]          mov     rdi, [.car]
   185 000001A9 4883C704                    add     rdi, 4
   186 000001AD 488B3425[30000000]          mov     rsi, [.FILE]
   187 000001B5 E8EAFEFFFF                  call    InTruck
   188 000001BA B801000000                  mov     rax, 1  ; Код возврата - true
   189 000001BF EB00                        jmp     .return
   190                                  .return:
   191                                  
   192 000001C1 C9                      leave
   193 000001C2 C3                      ret
   194                                  
   195                                  ; // Ввод содержимого контейнера из указанного файла
   196                                  ; void InContainer(void *c, int *len, FILE *ifst) {
   197                                  ;     void *tmp = c;
   198                                  ;     while(!feof(ifst)) {
   199                                  ;         if(InTransport(tmp, ifst)) {
   200                                  ;             tmp = tmp + shapeSize;
   201                                  ;             (*len)++;
   202                                  ;         }
   203                                  ;     }
   204                                  ; }
   205                                  global InContainer
   206                                  InContainer:
   207                                  section .bss
   208 00000044 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   209 0000004C <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   210 00000054 <res 00000008>              .FILE   resq    1   ; указатель на файл
   211                                  section .text
   212 000001C3 55                      push rbp
   213 000001C4 4889E5                  mov rbp, rsp
   214                                  
   215 000001C7 48893C25[44000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   216 000001CF 48893425[4C000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   217 000001D7 48891425[54000000]          mov [.FILE], rdx    ; сохраняется указатель на файл
   218                                      ; В rdi адрес начала контейнера
   219 000001DF 4831DB                      xor rbx, rbx        ; число фигур = 0
   220 000001E2 4889D6                      mov rsi, rdx        ; перенос указателя на файл
   221                                  .loop:
   222                                      ; сохранение рабочих регистров
   223 000001E5 57                          push rdi
   224 000001E6 53                          push rbx
   225                                  
   226 000001E7 488B3425[54000000]          mov     rsi, [.FILE]
   227 000001EF B800000000                  mov     rax, 0      ; нет чисел с плавающей точкой
   228 000001F4 E809FFFFFF                  call    InCar     ; ввод фигуры
   229 000001F9 4883F800                    cmp rax, 0          ; проверка успешности ввода
   230 000001FD 7E0B                        jle  .return        ; выход, если признак меньше или равен 0
   231                                  
   232 000001FF 5B                          pop rbx
   233 00000200 48FFC3                      inc rbx
   234                                  
   235 00000203 5F                          pop rdi
   236 00000204 4883C718                    add rdi, 24             ; адрес следующей фигуры
   237                                  
   238 00000208 EBDB                        jmp .loop
   239                                  .return:
   240 0000020A 488B0425[4C000000]          mov rax, [.plen]    ; перенос указателя на длину
   241 00000212 8918                        mov [rax], ebx      ; занесение длины
   242 00000214 C9                      leave
   243 00000215 C3                      ret
   244                                  
